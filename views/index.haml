%p
  The usage of the interface is quite simple:

%ul
  %li 
    go to 
    %a{:href=>"http://twitter.com"} twitter.com
  %li 
    pic a 
    %a{:href=>"http://twitter.com/phoet/status/21556716076"} random post
  %li copy the post-id from the url (<a href="http://twitter.com/phoet/status/21556716076">http://twitter.com/phoet/status/<strong>21556716076</strong></a>)
  %li paste it into the form
  %li select the MongoDB driver of choice
  %li
    %strong Chunky Bacon!
    
%p
  This will load the Twitter post, show you the executed Ruby source code, add the post to the MongoDB (hosted on <a href="http://mongohq.com">MongoHQ</a>), and outpu the bson datarepresentation.

-if @error
  %p.error=@error

-if @post_id && @driver
  %p.notice="You posted #{@post_id} with #{@driver} and created #{@mongo_id}"

  %h3 Twitter Response
  %pre.action=@twitter_post.ai(:plain => :true)
    
  %h3="Ruby Source for #{@driver}"
  =CodeRay.scan(@ruby_source, "ruby").div
  
  %h3="MongoDB data for #{@mongo_id}"
  %pre.action=@mongo_data.ai(:plain => :true).gsub(', "', ', <br>"')
  
  %h3 Another Chunky Bakon?

%h3.action
  %form{:method=>"post", :action=>"/add"}
    %p
      %label{:for=>"post_id"} Twitter Post ID:
      %input{:name=>"post_id"}
    %p
      %label{:for=>"driver"} MongoDB-Driver:
      -MONGODB_DRIVERS.each do |driver|
        %input{:name=>"driver", :type=>"radio", :value=>"#{driver}", "#{driver == @driver ? 'checked' : 'title'}"=>"checked"}= driver
  
    %p
      %input{:name=>"submit", :type=>"submit", :value=>"Chunky Bacon!"}
